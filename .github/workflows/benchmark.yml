name: R Array Traversal Benchmark

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # Allow manual triggering
  
jobs:
  benchmark:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        r-version: ['release']  # Test on specific version and latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up R ${{ matrix.r-version }}
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r-version }}
        use-public-rspm: true
        
    - name: Setup R package manager (faster binary installs)
      run: |
        # Configure repository for faster binary package installs
        echo 'options(repos = c(CRAN = "https://packagemanager.rstudio.com/cran/__linux__/jammy/latest"))' >> ~/.Rprofile
        echo 'options(HTTPUserAgent = sprintf("R/%s R (%s)", getRversion(), paste(getRversion(), R.version$platform, R.version$arch, R.version$os)))' >> ~/.Rprofile
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libcurl4-openssl-dev \
          libssl-dev \
          libxml2-dev \
          libharfbuzz-dev \
          libfribidi-dev \
          libfreetype6-dev \
          libpng-dev \
          libtiff5-dev \
          libjpeg-dev
          
    - name: Cache R packages
      uses: actions/cache@v4
      with:
        path: |
          /home/runner/work/_temp/Library
          ~/.local/share/renv
        key: ${{ runner.os }}-r${{ matrix.r-version }}-packages-v2-${{ hashFiles('benchmark.R') }}
        restore-keys: |
          ${{ runner.os }}-r${{ matrix.r-version }}-packages-v2-
          ${{ runner.os }}-r${{ matrix.r-version }}-packages-
        
    - name: Install R dependencies
      run: |
        # Fast installation using RStudio Package Manager
        echo "Installing packages..."
        Rscript -e "
          options(repos = c(CRAN = 'https://packagemanager.rstudio.com/cran/__linux__/jammy/latest'))
          # Install only essential packages for the benchmark
          if (!require('microbenchmark', quietly = TRUE)) {
            install.packages('microbenchmark')
          }
          # Skip ggplot2 since it's not actually used in the benchmark
          cat('Successfully installed required packages\n')
          cat('microbenchmark version:', as.character(packageVersion('microbenchmark')), '\n')
        "
        
    - name: Display system information
      run: |
        echo "=== System Information ==="
        uname -a
        echo "=== CPU Information ==="
        lscpu
        echo "=== Memory Information ==="
        free -h
        echo "=== R Version ==="
        Rscript -e "cat('R version:', R.version.string, '\n')"
        echo "=== R Package Information ==="
        Rscript -e "if (require('microbenchmark', quietly=TRUE)) cat('microbenchmark version:', as.character(packageVersion('microbenchmark')), '\n') else cat('microbenchmark not installed\n')"
        
    - name: Run R Array Traversal Benchmark
      run: |
        echo "Starting R benchmark execution..."
        Rscript benchmark.R
        
    - name: Check benchmark results
      run: |
        echo "Benchmark completed successfully!"
        echo "Exit code: $?"
        
    - name: Upload benchmark artifacts (if any plots are generated)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: benchmark-results-r${{ matrix.r-version }}
        path: |
          *.png
          *.pdf
          *.svg
        retention-days: 30
        
    - name: Display benchmark summary
      if: always()
      run: |
        echo "=== Benchmark Job Summary ==="
        echo "R Version: ${{ matrix.r-version }}"
        echo "OS: ubuntu-latest"
        echo "Timestamp: $(date)"
        echo "Repository: ${{ github.repository }}"
        echo "Commit: ${{ github.sha }}"
